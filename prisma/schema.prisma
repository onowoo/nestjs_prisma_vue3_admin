// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique @db.VarChar(50)
  password   String
  enable     Boolean  @default(true)
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
  profile    Profile?
  roles      Role[]   @relation("UserRoles")
}

model Profile {
  id       Int     @id @default(autoincrement())
  gender   Int?
  avatar   String  @default("")
  address  String?
  email    String?
  nickName String? @db.VarChar(10)
  user     User    @relation(fields: [userId], references: [id])
  userId   Int     @unique
}

model Role {
  id          Int          @id @default(autoincrement())
  code        String       @unique @db.VarChar(50)
  name        String       @unique @db.VarChar(50)
  enable      Boolean      @default(true)
  users       User[]       @relation("UserRoles")
  permissions Permission[] @relation("RolePermissions")
}

model Permission {
  id          Int      @id @default(autoincrement())
  name        String
  code        String   @unique @db.VarChar(50)
  type        String
  parentId    Int?
  path        String?
  redirect    String?
  icon        String?
  component   String?
  layout      String?
  keepAlive   Boolean?
  method      String?
  description String?
  show        Boolean  @default(true)
  enable      Boolean  @default(true)
  order       Int?
  roles       Role[]   @relation("RolePermissions")
  parent      Permission?  @relation("PermissionToPermission", fields: [parentId], references: [id])
  children    Permission[] @relation("PermissionToPermission")
}
